#!/usr/bin/env bash

set -e # exit if a commands returns a non-zero value

HELP="
NAME
  wakeful - do not let your laptop to sleep

USAGE
  wakeful [interval]

ARGS
  interval
    interval time in seconds to wake up (move) the mouse (default 120 seconds)

REQUIRES
  xdotool (sudo apt install xdotool)
  xprintidle (sudo apt install xprintidle)
"

if ! command -v xdotool &> /dev/null
then
    echo "Command xdotool not found, install it using: sudo apt install xdotool"
    exit
fi
if ! command -v xprintidle &> /dev/null
then
    echo "Command xprintidle not found, install it using: sudo apt install xprintidle"
    exit
fi

interval=90
is_integer='^[0-9]+$'

if [[ ! -z $1 ]] ; then
  if [[ "$1" =~ $is_integer ]] ; then # if arg is number
    interval=$1
  else
    echo "$HELP"
    exit 0
  fi
fi

mkdir -p /tmp/wakeful_logs
log_file="/tmp/wakeful_logs/wakeful_$(date +%Y%m%d_%H%M).log"

if command -v banner &> /dev/null
then
    banner wakeful
fi

echo "started at $(date) (interval $interval seconds)" | tee -a "$log_file"
echo | tee -a "$log_file"

woke=0
awaken () {
  # if the IDLE time is more than the interval time
  if (( $(xprintidle) > ($interval * 1000) )); then
    # do not let the laptop to go asleep
    woke=$((++woke))
    echo -e "\e[1A\e[Kwakeful $(date) (#${woke}, $(((woke * interval) / 60)) minutes)" | tee -a "$log_file"
    xdotool mousemove_relative -- 0 -10
    xdotool sleep 0.1
    xdotool mousemove_relative -- -10 0
    xdotool sleep 0.1
    xdotool mousemove_relative 0 10
    xdotool sleep 0.1
    xdotool mousemove_relative 10 0
  else
    if (( woke != 0 )); then
      echo | tee -a "$log_file"
    fi
    woke=0
  fi
}

while true; do
  sleep $interval
  awaken
done
