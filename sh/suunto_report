#!/bin/bash

set -e # exit if a commands returns a non-zero value

HELP="
suunto_report 1.0.0
Luca Pinelli

suunto_report builds and show a report of your free dives using the backup file
of the Suunto DM5 application (SQLite database).

USAGE:
  suunto_report BACKUP_FILE_PATH

ARGS:
  BACKUP_FILE_PATH the path of the backup file of the Suunto DM5 application
"

case "$1" in
  -h|--help)
    echo "$HELP"
    exit 0
esac

if [ -z "$1" ]; then
    echo "You need to specify a backup file"
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "The file \"$1\" does not exist."
    exit 1
fi

type="$(file "$1")"
if [[ ! "$type" =~ "SQLite" ]]; then
    echo "The file \"$1\" is not a Suunto DM5 backup file (SQLite database)."
    exit 1
fi

if [[ ! "$1" =~ ".db.bak" ]]; then
    echo "The file \"$1\" does not have the correct extension: .db.bak"
    exit 1
fi

backup_name="$1"
db_file_name="$(echo "$backup_name" | sd '\.db.bak$' '.db')"
report_file_name="$(echo "$backup_name" | sd '\.db.bak$' '_report.txt' | sd '^DM.' '')"

echo "> SQLite 3 Database: ${db_file_name}"
rm -f "$db_file_name"
cp "$backup_name" "$db_file_name"
file "$db_file_name"

echo '> create view "FreeDive"'
create_view="
create view FreeDive
as
select
  DiveId,
  cast(strftime('%Y', date(datetime(((StartTime / 10000000) - (1970 * 365 * 24 * 60 * 60) - (112 * 24 * 60 * 60)), 'unixepoch'))) as int) Year,
  cast(strftime('%m', date(datetime(((StartTime / 10000000) - (1970 * 365 * 24 * 60 * 60) - (112 * 24 * 60 * 60)), 'unixepoch'))) as int) Month,
  cast(strftime('%d', date(datetime(((StartTime / 10000000) - (1970 * 365 * 24 * 60 * 60) - (112 * 24 * 60 * 60)), 'unixepoch'))) as int) Day,
  cast(strftime('%W', date(datetime(((StartTime / 10000000) - (1970 * 365 * 24 * 60 * 60) - (112 * 24 * 60 * 60)), 'unixepoch'))) as int) Week,
  datetime(((StartTime / 10000000) - (1970 * 365 * 24 * 60 * 60) - (112 * 24 * 60 * 60)), 'unixepoch') DiveDate,
  Duration,
  (Duration / 60) || ':' || substr('0' || (Duration % 60), -2, 2) as ApneaTime,
  AvgDepth,
  MaxDepth,
  BottomTemperature as Temperature,
  DiveNumberInSerie as Serie
from dive
where mode = 3 --freedive
"
echo "$create_view" | bat --plain -l sql
sqlite3 "$db_file_name" "$create_view"

echo "
                               ╭─────────────────────╮
                               │ ╭─────────────────╮ │
                               │ │ FREEDIVE REPORT │ │
                               │ ╰─────────────────╯ │
                               ╰─────────────────────╯
"

print_graph () {
  rows=$1
  max=$2
  indentation=$3
  values=()
  for value in $rows; do
    scaled=$(eva "$value / $max * 48" | cut -d. -f1)
    values+=($scaled)
  done

  for j in 40 32 24 16 8 0; do
    echo -n "$indentation"
    for i in "${values[@]}"; do
      i=$(eva "$i-$j" | cut -d. -f1)
      if (( i <= 0 )); then
        echo -n " "
      else
        case $i in
          1) echo -n "▁" ;;
          2) echo -n "▂" ;;
          3) echo -n "▃" ;;
          4) echo -n "▄" ;;
          5) echo -n "▅" ;;
          6) echo -n "▆" ;;
          7) echo -n "▇" ;;
          *) echo -n "█" ;;
        esac
      fi
    done
    echo
  done

  echo -n "$indentation"
  for i in "${values[@]}"; do
    case $i in
      48) echo -n "*" ;;
      *) echo -n " " ;;
    esac
  done
  echo
}

deepest_dive () {

  if [[ "$1" ==  "" ]]; then

    best=$(
      echo "
        select
          strftime('%Y-%m-%d', date(DiveDate)) DiveDay,
          ApneaTime,
          MaxDepth,
          Temperature
        from FreeDive
        order by MaxDepth desc, DiveDate
        limit 1
      " | sqlite3 "$db_file_name"
    )

    echo "
    ╭──────────────╮
    │ Deepest Dive │
    ╰──────────────╯

    $(echo "$best" | sd '(.*)\|(.*)\|(.*)\|(.*)' '${1} ${3} mt, ${2}, ${4}°')
    "
  else

    best=$(
      echo "
        select
          strftime('%Y-%m-%d', date(DiveDate)) DiveDay,
          ApneaTime,
          MaxDepth,
          Temperature
        from FreeDive
        where year = $1
        order by MaxDepth desc, DiveDate
        limit 1
      " | sqlite3 "$db_file_name"
    )

    echo "
    ╭───────────────────╮
    │ Deepest Dive ${1} │
    ╰───────────────────╯

    $(echo "$best" | sd '(.*)\|(.*)\|(.*)\|(.*)' '${1} ${3} mt, ${2}, ${4}°')
    "

  fi
}

best_duration () {
  if [[ "$1" ==  "" ]]; then
    best=$(
      echo "
        select
          strftime('%Y-%m-%d', date(DiveDate)) DiveDay,
          ApneaTime,
          MaxDepth,
          Temperature
        from FreeDive
        order by ApneaTime desc, DiveDate
        limit 1
      " | sqlite3 "$db_file_name"
    )

    echo "
    ╭───────────────╮
    │ Best Duration │
    ╰───────────────╯

    $(echo "$best" | sd '(.*)\|(.*)\|(.*)\|(.*)' '${1} ${2}, ${3} mt, ${4}°')
    "
  else
    best=$(
      echo "
        select
          strftime('%Y-%m-%d', date(DiveDate)) DiveDay,
          ApneaTime,
          MaxDepth,
          Temperature
        from FreeDive
        where year = $1
        order by ApneaTime desc, DiveDate
        limit 1
      " | sqlite3 "$db_file_name"
    )

    echo "
    ╭────────────────────╮
    │ Best Duration ${1} │
    ╰────────────────────╯

    $(echo "$best" | sd '(.*)\|(.*)\|(.*)\|(.*)' '${1} ${2}, ${3} mt, ${4}°')
    "
  fi
}

report () {

    echo "
    ╭──────────────╮
    │ Last 30 days │
    ╰──────────────╯
    "

    echo ".mode columns
    select *
    from (
      select
        strftime('%Y-%m-%d', date(DiveDate)) DiveDay,
        max(ApneaTime) ApneaTime,
        max(AvgDepth) AvgDepth,
        max(MaxDepth) MaxDepth,
        min(Temperature) Temperature
      from FreeDive
      group by strftime('%Y-%m-%d', date(DiveDate)) -- DiveDay
      order by strftime('%Y-%m-%d', date(DiveDate)) desc -- DiveDay
      limit 30
    )
    order by DiveDay
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭──────────────╮
    │ Top duration │
    ╰──────────────╯
    "

    echo ".mode columns
    -- Dayly Report: Top ApneaTime
    select DiveDate, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
      select min(DiveId) id
      from FreeDive
      join (
        select strftime('%Y-%m-%d', date(DiveDate)) Day, max(Duration) Max
        from FreeDive
        group by strftime('%Y-%m-%d', date(DiveDate)) -- group by Day
        order by max(Duration) desc
      ) Top on Top.Day = strftime('%Y-%m-%d', date(DiveDate)) and Top.Max = Duration
      group by strftime('%Y-%m-%d', date(DiveDate))
      order by Duration desc
      limit 10
    ) TopRef where TopRef.id = DiveId
    order by Duration desc, DiveDate
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭───────────╮
    │ Top depth │
    ╰───────────╯
    "

    echo ".mode columns
    -- Dayly Report: Top MaxDepth
    select DiveDate, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
      select min(DiveId) id
      from FreeDive
      join (
        select strftime('%Y-%m-%d', date(DiveDate)) Day, max(MaxDepth) Max
        from FreeDive
        group by strftime('%Y-%m-%d', date(DiveDate)) -- group by Day
        order by max(MaxDepth) desc
      ) Top on Top.Day = strftime('%Y-%m-%d', date(DiveDate)) and Top.Max = MaxDepth
      group by strftime('%Y-%m-%d', date(DiveDate))
      order by MaxDepth desc
      limit 10
    ) TopRef where TopRef.id = DiveId
    order by MaxDepth desc, DiveDate
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭────────────────╮
    │ Top mean depth │
    ╰────────────────╯
    "

    echo ".mode columns
    -- Dayly Report: Top AvgDepth
    select DiveDate, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
      select min(DiveId) id
      from FreeDive
      join (
        select strftime('%Y-%m-%d', date(DiveDate)) Day, max(AvgDepth) Max
        from FreeDive
        group by strftime('%Y-%m-%d', date(DiveDate)) -- group by Day
        order by max(AvgDepth) desc
      ) Top on Top.Day = strftime('%Y-%m-%d', date(DiveDate)) and Top.Max = AvgDepth
      group by strftime('%Y-%m-%d', date(DiveDate))
      order by AvgDepth desc
      limit 10
    ) TopRef where TopRef.id = DiveId
    order by AvgDepth desc, DiveDate
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭──────────────────────────────╮
    │ Monthly Report Best Duration │
    ╰──────────────────────────────╯
    "

    echo ".mode columns
    select TopRef.Month, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
    	select min(Dive.DiveId) DiveId, TopTime.Month
    	from (
    		select strftime('%Y-%m', date(DiveDate)) Month, max(Duration) Max
    		from FreeDive
    		group by strftime('%Y-%m', date(DiveDate)) -- group by month
    	) TopTime
    	join FreeDive Dive on
    		strftime('%Y-%m', date(Dive.DiveDate)) = TopTime.Month
    		and Dive.Duration = TopTime.Max
    	group by TopTime.Month
    ) TopRef on TopRef.DiveId = FreeDive.DiveId
    order by Duration desc
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭───────────────────────────╮
    │ Monthly Report Best Depth │
    ╰───────────────────────────╯
    "

    echo ".mode columns
    select TopRef.Month, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
    	select min(Dive.DiveId) DiveId, TopDepth.Month
    	from (
        select strftime('%Y-%m', date(DiveDate)) Month, max(MaxDepth) Max
        from FreeDive
        group by strftime('%Y-%m', date(DiveDate)) -- group by month
    	) TopDepth
    	join FreeDive Dive on
    		strftime('%Y-%m', date(Dive.DiveDate)) = TopDepth.Month
    		and Dive.MaxDepth = TopDepth.Max
    	group by TopDepth.Month
    ) TopRef on TopRef.DiveId = FreeDive.DiveId
    order by MaxDepth desc
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭────────────────────────────────╮
    │ Monthly Report Best Mean Depth │
    ╰────────────────────────────────╯
    "

    echo ".mode columns
    select TopRef.Month, ApneaTime, AvgDepth, MaxDepth, Temperature, Serie
    from FreeDive
    join (
    	select min(Dive.DiveId) DiveId, TopAvgDepth.Month
    	from (
        select strftime('%Y-%m', date(DiveDate)) Month, max(AvgDepth) Max
        from FreeDive
        group by strftime('%Y-%m', date(DiveDate)) -- group by month
    	) TopAvgDepth
    	join FreeDive Dive on
    		strftime('%Y-%m', date(Dive.DiveDate)) = TopAvgDepth.Month
    		and Dive.AvgDepth = TopAvgDepth.Max
    	group by TopAvgDepth.Month
    ) TopRef on TopRef.DiveId = FreeDive.DiveId
    order by AvgDepth desc
    " | sqlite3 "$db_file_name" | sd '^' '    '

    echo "
    ╭────────────────────────╮
    │ Monthly Duration Graph │
    ╰────────────────────────╯
    "
    rows=`echo ".mode columns
    select max(Duration)
    from FreeDive
    group by Year, Month
    order by Year, Month
    " | sqlite3 "$db_file_name" | tail +3`
    max=`echo ".mode columns
    select max(Duration)
    from FreeDive
    " | sqlite3 "$db_file_name" | tail +3`
    print_graph "$rows" "$max" "    "

    echo "
    ╭─────────────────────────╮
    │ Monthly Max Depth Graph │
    ╰─────────────────────────╯
    "
    rows=`echo ".mode columns
    select max(MaxDepth)
    from FreeDive
    group by Year, Month
    order by Year, Month
    " | sqlite3 "$db_file_name" | tail +3`
    max=`echo ".mode columns
    select max(MaxDepth)
    from FreeDive
    " | sqlite3 "$db_file_name" | tail +3`
    print_graph "$rows" "$max" "    "

    echo "
    ╭─────────────────────────╮
    │ Monthly Avg Depth Graph │
    ╰─────────────────────────╯
    "
    rows=`echo ".mode columns
    select max(AvgDepth)
    from FreeDive
    group by Year, Month
    order by Year, Month
    " | sqlite3 "$db_file_name" | tail +3`
    max=`echo ".mode columns
    select max(AvgDepth)
    from FreeDive
    " | sqlite3 "$db_file_name" | tail +3`
    print_graph "$rows" "$max" "    "

    deepest_dive 2023

    best_duration 2023

    deepest_dive

    best_duration
}

report > "$report_file_name"

cat "$report_file_name"
