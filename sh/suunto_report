#!/bin/bash

set -e # exit if a commands returns a non-zero value

HELP="
suunto_report 1.0.0
Luca Pinelli

suunto_report builds an show a report of your free dive using the PDF export file
from Suunto DM5. Additionally you will find in this folder a SQLite 3 database and
a CSV file containing all the data extracted from the PDF.

USAGE:
  suunto_report PDF_PATH

ARGS:
  PDF_PATH the path of the PDF report file exported using Suunto DM5
"

case "$1" in
  -h|--help)
    echo "$HELP"
    exit 0
esac

if [ -z "$1" ]; then
    echo "You need to specify a PDF file"
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "The file \"$1\" does not exist."
    exit 1
fi

type="$(file "$1")"
if [[ ! "$type" =~ "PDF" ]]; then
    echo "The file \"$1\" is not a PDF file."
    exit 1
fi

pdf_name="$1"
csv_name="$(echo "$pdf_name" | sd '\.pdf$' '.csv')"

create_csv() {
  pdftotext "$pdf_name" /tmp/suunto_report.txt
  rg '[\w\d]' /tmp/suunto_report.txt | sd '^[^\w\d]*([\w\d ]+)[^\w\d]*$' '$1' > /tmp/suunto_report_clean.txt
  printf "id,year,month,day,time,duration,duration_secs,max depth,avg depth\n" > "$csv_name"
  i=0
  while read line
  do
    i=$((i + 1))
    if ((i < 21)); then # exclude the first 20 lines
      continue
    fi
    module=$(( (i - 20) % 8 ))
    if ((module == 1)); then
      id="$line"
    elif ((module == 2)); then
      # date="$line"
      split=(${line//\// })
      year=${split[2]}
      month=${split[0]}
      day=${split[1]}
    elif ((module == 3)); then
      time="$line"
    elif ((module == 4)); then
      duration="$line"
      duration_secs="$(echo $line | sd '^0:(\d\d).(\d\d)$' '($1 * 60) + $2' | bc)"
    elif ((module == 5)); then
      max_depth="$(echo "$line" | sd '^([\d.]+)[^\d]*$' '$1')"
    elif ((module == 6)); then
      avg_depth="$(echo "$line" | sd '^([\d.]+)[^\d]*$' '$1')"
      printf "$id,$year,$month,$day,$time,$duration,$duration_secs,$max_depth,$avg_depth\n" >> "$csv_name"
    fi
  done < /tmp/suunto_report_clean.txt
}

echo "extract the data from the PDF and create the CSV file..."
create_csv

echo "
╭────────────╮
│ CSV sample │
╰────────────╯
"
head "$csv_name" | column --separator ',' --table # print in a tabular format (print in a table)

echo "
╭────────────────────────╮
│ SQLite 3 execution log │
╰────────────────────────╯
"

db_file_name="$(echo "$pdf_name" | sd '\.pdf$' '.sqlite.db')"

echo "> SQLite 3 Database: ${db_file_name}"
echo '> remove old DB'
rm -f "$db_file_name"
echo '> create table "freedive"'
sqlite3 "$db_file_name" '
create table "freedive" (
  "id" integer,
  "year" integer,
  "month" integer,
  "day" integer,
  "time" text,
  "duration" text,
  "duration_secs" integer,
  "max_depth" real,
  "avg_depth" real
)
'
echo '> import csv'
echo "
.mode csv
.separator ,
.import ${csv_name} freedive
delete from freedive where id = 'id'
" | sqlite3 "$db_file_name"


echo "
╭─────────╮
│ REPORTS │
╰─────────╯
"

report () {

    echo "
    ╭───────────╮
    │ Top depth │
    ╰───────────╯
    "
    echo ".mode columns
    select
        top_depth.year,
        top_depth.month,
        top_depth.day,
        top_depth.depth,
        (max(duration.duration_secs) / 60) || ':' || substr('0' || (max(duration.duration_secs) % 60), -2, 2) duration
    from (
        -- top_depth
        select year, month, day, max(max_depth) depth
        from freedive
        group by year, month, day
    ) top_depth
    join (
        select year, month, day, max_depth, max(duration_secs) duration_secs
        from freedive
        group by year, month, day, max_depth
    ) duration
        on top_depth.year = duration.year
        and top_depth.month = duration.month
        and top_depth.day = duration.day
        and top_depth.depth = duration.max_depth
    group by
        top_depth.year,
        top_depth.month,
        top_depth.day,
        top_depth.depth
    order by top_depth.depth desc, top_depth.year, top_depth.month, top_depth.day
    limit 10
    " | sqlite3 "$db_file_name"
    echo

    echo "
    ╭──────────────╮
    │ Top duration │
    ╰──────────────╯
    "
    echo ".mode columns
    select
        top_duration.year,
        top_duration.month,
        top_duration.day,
        top_duration.duration,
        max(depth.depth) depth
    from (
        -- top_duration
        select
            year,
            month,
            day,
            duration_secs,
            (max(duration_secs) / 60) || ':' || substr('0' || (max(duration_secs) % 60), -2, 2) duration
        from freedive
        group by year, month, day
    ) top_duration
    join (
        select year, month, day, duration_secs, max(max_depth) depth
        from freedive
        group by year, month, day, duration_secs
    ) depth
        on top_duration.year = depth.year
        and top_duration.month = depth.month
        and top_duration.day = depth.day
        and top_duration.duration_secs = depth.duration_secs
    group by
        top_duration.year,
        top_duration.month,
        top_duration.day,
        top_duration.duration
    order by top_duration.duration desc, top_duration.year, top_duration.month, top_duration.day
    limit 10
    " | sqlite3 "$db_file_name"

    echo "
    ╭───────────────────────╮
    │ Top day mean duration │
    ╰───────────────────────╯
    "
    echo ".mode columns
    select
      year,
      month,
      day,
      (avg_sec / 60) || ':' || substr('0' || (avg_sec % 60), -2, 2) avg_duration
    from (
      select
        year,
        month,
        day,
        cast(round(avg(duration_secs)) as int) avg_sec
      from freedive
      group by year, month, day
      order by cast(round(avg(duration_secs)) as int) desc
      limit 10
    ) mean_day
    " | sqlite3 "$db_file_name"

    echo "
    ╭────────────────╮
    │ Monthly Report │
    ╰────────────────╯
    "
    echo ".mode columns
    select *
    from (
        -- report
        select
            mean.year,
            mean.month,
            '(' || deep.duration || ') ' || deep.max_depth max_depth,
            '(' || long.duration || ') ' || long.max_depth max_duration,
            '(' || mean.duration || ') ' || mean.depth mean
        from (
          -- mean
          select
              freedive.year,
              freedive.month,
              cast( (avg(freedive.duration_secs) / 60) as int)
                || ':'
                || substr('0' || cast( (avg(freedive.duration_secs) % 60) as int), -2, 2)
                duration,
              round(avg(freedive.max_depth), 1) depth
          from freedive
          where freedive.year >= 2023
          group by freedive.year, freedive.month
          order by freedive.year desc, freedive.month  desc
        ) mean
        join (
            -- deep
            select
                freedive.year,
                freedive.month,
                freedive.max_depth,
                (max(freedive.duration_secs) / 60) || ':' || substr('0' || (max(freedive.duration_secs) % 60), -2, 2) duration
            from freedive
            join (
                select year, month, max(max_depth) max_depth
                from freedive
                group by year, month
            ) deepdive
                on freedive.year = deepdive.year
                and freedive.month = deepdive.month
                and freedive.max_depth = deepdive.max_depth
            group by freedive.year, freedive.month, freedive.max_depth
        ) deep on deep.year = mean.year and deep.month = mean.month
        join (
            -- long
            select
                freedive.year,
                freedive.month,
                max(freedive.max_depth) max_depth,
                (freedive.duration_secs / 60) || ':' || substr('0' || (freedive.duration_secs % 60), -2, 2) duration
            from freedive
            join (select year, month, max(duration_secs) max_duration
                from freedive
                group by year, month
            ) longdive
                on freedive.year = longdive.year
                and freedive.month = longdive.month
                and freedive.duration_secs = longdive.max_duration
            group by freedive.year, freedive.month, freedive.duration_secs
        ) long on long.year = mean.year and long.month = mean.month
        order by deep.year desc, deep.month desc
    ) report
    order by year, month
    " | sqlite3 "$db_file_name"

    echo "
    ╭──────────────╮
    │ Last 30 days │
    ╰──────────────╯
    "
    echo ".mode columns
    select *
    from (
        -- report
        select
            -- row_number() over (order by deep.year, deep.month, deep.day) as row_number,
            mean.year,
            mean.month,
            mean.day,
            '(' || deep.duration || ') ' || deep.max_depth max_depth,
            '(' || long.duration || ') ' || long.max_depth max_duration,
            '(' || mean.duration || ') ' || mean.depth mean
        from (
          -- mean
          select
              freedive.year,
              freedive.month,
              freedive.day,
              cast( (avg(freedive.duration_secs) / 60) as int)
                || ':'
                || substr('0' || cast( (avg(freedive.duration_secs) % 60) as int), -2, 2)
                duration,
              round(avg(freedive.max_depth), 1) depth
          from freedive
          group by freedive.year, freedive.month, freedive.day
          order by freedive.year desc, freedive.month  desc, freedive.day desc
          limit 30
        ) mean
        join (
            -- deep
            select
                freedive.year,
                freedive.month,
                freedive.day,
                freedive.max_depth,
                (max(freedive.duration_secs) / 60) || ':' || substr('0' || (max(freedive.duration_secs) % 60), -2, 2) duration
            from freedive
            join (
                select year, month, day, max(max_depth) max_depth
                from freedive
                group by year, month, day
            ) deepdive
                on freedive.year = deepdive.year
                and freedive.month = deepdive.month
                and freedive.day = deepdive.day
                and freedive.max_depth = deepdive.max_depth
            group by freedive.year, freedive.month, freedive.day, freedive.max_depth
        ) deep on deep.year = mean.year and deep.month = mean.month and deep.day = mean.day
        join (
            -- long
            select
                freedive.year,
                freedive.month,
                freedive.day,
                max(freedive.max_depth) max_depth,
                (freedive.duration_secs / 60) || ':' || substr('0' || (freedive.duration_secs % 60), -2, 2) duration
            from freedive
            join (select year, month, day, max(duration_secs) max_duration
                from freedive
                group by year, month, day
            ) longdive
                on freedive.year = longdive.year
                and freedive.month = longdive.month
                and freedive.day = longdive.day
                and freedive.duration_secs = longdive.max_duration
            group by freedive.year, freedive.month, freedive.day, freedive.duration_secs
        ) long on long.year = mean.year and long.month = mean.month and long.day = mean.day
        order by deep.year desc, deep.month  desc, deep.day desc
    ) report
    order by year, month, day
    " | sqlite3 "$db_file_name"
    echo
}

report > report.txt

cat report.txt
