#!/bin/bash

set -e # exit if a commands returns a non-zero value

HELP="
suunto_report 1.0.0
Luca Pinelli

suunto_report builds an show a report of your free dive using the PDF export file
from Suunto DM5. Additionally you will find in this folder a SQLite 3 database and
a CSV file containing all the data extracted from the PDF.

USAGE:
  suunto_report PDF_PATH

ARGS:
  PDF_PATH the path of the PDF report file exported using Suunto DM5
"

case "$1" in
  -h|--help)
    echo "$HELP"
    exit 0
esac

if [ -z "$1" ]; then
    echo "You need to specify a PDF file"
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "The file \"$1\" does not exist."
    exit 1
fi

type="$(file "$1")"
if [[ ! "$type" =~ "PDF" ]]; then
    echo "The file \"$1\" is not a PDF file."
    exit 1
fi

pdf_name="$1"
csv_name="$(echo "$pdf_name" | sd '\.pdf$' '.csv')"

create_csv() {
  pdftotext "$pdf_name" /tmp/suunto_report.txt
  rg '[\w\d]' /tmp/suunto_report.txt | sd '^[^\w\d]*([\w\d ]+)[^\w\d]*$' '$1' > /tmp/suunto_report_clean.txt
  printf "id,year,month,day,time,duration,duration_secs,max depth,avg depth\n" > "$csv_name"
  i=0
  while read line
  do
    i=$((i + 1))
    if ((i < 21)); then # exclude the first 20 lines
      continue
    fi
    module=$(( (i - 20) % 8 ))
    if ((module == 1)); then
      id="$line"
    elif ((module == 2)); then
      # date="$line"
      split=(${line//\// })
      year=${split[2]}
      month=${split[0]}
      day=${split[1]}
    elif ((module == 3)); then
      time="$line"
    elif ((module == 4)); then
      duration="$line"
      duration_secs="$(echo $line | sd '^0:(\d\d).(\d\d)$' '($1 * 60) + $2' | bc)"
    elif ((module == 5)); then
      max_depth="$(echo "$line" | sd '^([\d.]+)[^\d]*$' '$1')"
    elif ((module == 6)); then
      avg_depth="$(echo "$line" | sd '^([\d.]+)[^\d]*$' '$1')"
      printf "$id,$year,$month,$day,$time,$duration,$duration_secs,$max_depth,$avg_depth\n" >> "$csv_name"
    fi
  done < /tmp/suunto_report_clean.txt
}

echo "extract the data from the PDF and create the CSV file..."
create_csv

echo "
╭────────────╮
│ CSV sample │
╰────────────╯
"
head "$csv_name" | column --separator ',' --table # print in a tabular format (print in a table)

echo "
╭────────────────────────╮
│ SQLite 3 execution log │
╰────────────────────────╯
"

db_file_name="$(echo "$pdf_name" | sd '\.pdf$' '.sqlite.db')"

echo "> SQLite 3 Database: ${db_file_name}"
echo '> remove old DB'
rm -f "$db_file_name"
echo '> create table "freedive"'
sqlite3 "$db_file_name" '
create table "freedive" (
  "id" integer,
  "year" integer,
  "month" integer,
  "day" integer,
  "time" text,
  "duration" text,
  "duration_secs" integer,
  "max_depth" real,
  "avg_depth" real
)
'
echo '> import csv'
echo "
.mode csv
.separator ,
.import ${csv_name} freedive
delete from freedive where id = 'id'
" | sqlite3 "$db_file_name"


echo "
╭─────────╮
│ REPORTS │
╰─────────╯
"

report () {

    echo "
    ╭──────────────╮
    │ Top duration │
    ╰──────────────╯
    "
    echo ".mode columns
    select
        f.year,
        substr('  ' || max(f.month), -2, 2) month,
        substr('  ' || max(f.day), -2, 2) day,
        (max(f.duration_secs) / 60) || ':' || substr('0' || (max(f.duration_secs) % 60), -2, 2) duration,
        max(max_depth) max_depth,
        max(avg_depth) avg_depth
    from freedive f
    join (
        select year, month, day, max(duration_secs) duration_secs
        from freedive
        group by year, month, day
        order by max(duration_secs) desc
        limit 10
    ) top
        on top.year = f.year
        and top.month = f.month
        and top.day = f.day
        and top.duration_secs = f.duration_secs
    group by f.year, f.month, f.day
    order by max(f.duration_secs) desc
    " | sqlite3 "$db_file_name"


    echo "
    ╭───────────╮
    │ Top depth │
    ╰───────────╯
    "
    echo ".mode columns
    select
        f.year,
        substr('  ' || max(f.month), -2, 2) month,
        substr('  ' || max(f.day), -2, 2) day,
        (max(duration_secs) / 60) || ':' || substr('0' || (max(duration_secs) % 60), -2, 2) duration,
        max(f.max_depth) max_depth,
        max(avg_depth) avg_depth
    from freedive f
    join (
        select year, month, day, max(max_depth) max_depth
        from freedive
        group by year, month, day
        order by max(max_depth) desc
        limit 10
    ) top
        on top.year = f.year
        and top.month = f.month
        and top.day = f.day
        and top.max_depth = f.max_depth
    group by f.year, f.month, f.day
    order by max(f.max_depth) desc
    " | sqlite3 "$db_file_name"
    echo

    echo "
    ╭────────────────╮
    │ Top mean depth │
    ╰────────────────╯
    "
    echo ".mode columns
    select
        f.year,
        substr('  ' || max(f.month), -2, 2) month,
        substr('  ' || max(f.day), -2, 2) day,
        (max(duration_secs) / 60) || ':' || substr('0' || (max(duration_secs) % 60), -2, 2) duration,
        max(max_depth) max_depth,
        max(f.avg_depth) avg_depth
    from freedive f
    join (
        select year, month, day, max(avg_depth) avg_depth
        from freedive
        group by year, month, day
        order by max(avg_depth) desc
        limit 10
    ) top
        on top.year = f.year
        and top.month = f.month
        and top.day = f.day
        and top.avg_depth = f.avg_depth
    group by f.year, f.month, f.day
    order by max(f.avg_depth) desc
    " | sqlite3 "$db_file_name"

    echo "
    ╭──────────────────────────────╮
    │ Monthly Report Best Duration │
    ╰──────────────────────────────╯
    "
    echo ".mode columns
    select year, month, max(duration) duration
    from freedive
    group by year, month
    order by max(duration) desc
    " | sqlite3 "$db_file_name"

    echo "
    ╭───────────────────────────╮
    │ Monthly Report Best Depth │
    ╰───────────────────────────╯
    "
    echo ".mode columns
    select year, month, max(max_depth) max_depth
    from freedive
    group by year, month
    order by max(max_depth) desc
    " | sqlite3 "$db_file_name"

    echo "
    ╭────────────────────────────────╮
    │ Monthly Report Best Mean Depth │
    ╰────────────────────────────────╯
    "
    echo ".mode columns
    select year, month, max(avg_depth) avg_depth
    from freedive
    group by year, month
    order by max(avg_depth) desc
    " | sqlite3 "$db_file_name"

    echo "
    ╭──────────────╮
    │ Last 30 days │
    ╰──────────────╯
    "
    echo ".mode columns
    select *
    from (
      select
        freedive.year,
        substr('  ' || max(freedive.month), -2, 2) month,
        substr('  ' || max(freedive.day), -2, 2) day,
        max_depth.depth top_depth,
        max_duration.duration top_duration
      from freedive
      join (
        -- daily max duration
        select
            f.year,
            f.month,
            f.day,
            (max(f.duration_secs) / 60) || ':' || substr('0' || (max(f.duration_secs) % 60), -2, 2)
            || ' (' || substr('    ' || max(f.max_depth), -4, 4) || ')' duration
        from freedive f
        join (
            select year, month, day, max(duration_secs) duration_secs
            from freedive
            group by year, month, day
        ) top
            on top.year = f.year
            and top.month = f.month
            and top.day = f.day
            and top.duration_secs = f.duration_secs
        group by f.year, f.month, f.day
      ) max_duration
        on max_duration.year = freedive.year
        and max_duration.month = freedive.month
        and max_duration.day = freedive.day
      join (
        -- daily max depth
        select
            f.year,
            f.month,
            f.day,
            '(' || (max(f.duration_secs) / 60) || ':' || substr('0' || (max(f.duration_secs) % 60), -2, 2) || ') '
            || substr('    ' || max(f.max_depth), -4, 4) depth
        from freedive f
        join (
            select year, month, day, max(max_depth) max_depth
            from freedive
            group by year, month, day
        ) top
            on top.year = f.year
            and top.month = f.month
            and top.day = f.day
            and top.max_depth = f.max_depth
        group by f.year, f.month, f.day
      ) max_depth
        on max_depth.year = freedive.year
        and max_depth.month = freedive.month
        and max_depth.day = freedive.day
      where freedive.year >= 2023
      group by freedive.year, freedive.month, freedive.day
      order by freedive.year desc, freedive.month desc, freedive.day desc
      limit 30
    ) freedive_day
    order by year, month, day
    " | sqlite3 "$db_file_name"
    echo
}

report_file_name="$(echo "$pdf_name" | sd '\.pdf$' '_report.txt')"
report > "$report_file_name"

cat "$report_file_name"
