#!/usr/bin/env bash

set -e # -e  exit immediately when a command fails

HELP="
NAME
  cbr - cargo binary register

USAGE
  cbr <command>

Commands:
  list                          lists registered binaries
  upgrade                       installs/upgrades all the registered binaries
  verify                        checks the difference between what is installed and what it is registered
  register <crate> <bin> <desc> registers a crate/binary
  unregister <crate>            unregisters a crate/binary
  help                          shows this help
"

function help {
  echo "$HELP"
}

script_path="$(dirname $(realpath $0))"
project_path="$(dirname $script_path)"

case $1 in
  list)
    (
      cd "$project_path/resources"
      awk -F ': ' '{print $2": "$3}' cargo.register | sort | column -s ':' -t
    )
  ;;
  upgrade)
    (
      cd "$project_path/resources"
      for crate in $(awk -F ': ' '{print $1}' cargo.register | sort); do
        echo -e "\nInstalling/upgradeing create ${crate}..."
        cargo install $crate
      done
    )
  ;;
  verify)
    (
      cd "$project_path/resources"
      diff <(awk -F ': ' '{print $2}' cargo.register | sort) <(ls ~/.cargo/bin) | rg '<|>' | sd '>' '+' | sd '<' '-'
    )
  ;;
  register)
    (
      cd "$project_path/resources"
      if [ -n "$2" ] && [ -n "$3" ] && [ -n "$4" ] && ! [[ -n "$5" ]]; then
        line="$(rg --no-filename "^$2:" cargo.register | cat)"
        if [ "$line" != "" ]; then
          echo '"'"$2"'"'" is already registered:"
          echo "$line"
        else
          echo "$2: $3: $4" >> cargo.register
          echo "$2: $3: $4 [REGISTERED]"
          echo
          crate="$(echo $line | awk -F ': ' '{print $1}' )"
          binary="$(echo $line | awk -F ': ' '{print $2}' )"
          installed="$(ls ~/.cargo/bin | rg "^${binary}$")"
          if [ "$installed" = "" ]; then
            read -n1 -sp "do you want to install the crate $crate (~/.cargo/bin/$binary)? [y/n] (default n) "
            echo "$REPLY"
            if [ "$REPLY" = "y" ]; then
              cargo install "$crate"
            fi
          fi
        fi
      else
        help
      fi
    )
  ;;
  unregister)
    (
      cd "$project_path/resources"
      if [ -n "$2" ] && ! [[ -n "$3" ]]; then
        line="$(rg --no-filename "^$2:" cargo.register | cat)"
        if [ "$line" != "" ]; then
          sed --in-place "/^$2\:/d" cargo.register
          echo "$line [UNREGISTERED]"
          echo
          crate="$(echo $line | awk -F ': ' '{print $1}' )"
          binary="$(echo $line | awk -F ': ' '{print $2}' )"
          installed="$(ls ~/.cargo/bin | rg "^${binary}$")"
          if [ "$installed" != "" ]; then
            read -n1 -sp "do you want to uninstall the crate $crate (~/.cargo/bin/$binary)? [y/n] (default n) "
            echo "$REPLY"
            if [ "$REPLY" = "y" ]; then
              cargo uninstall "$crate"
            fi
          fi
        else
          echo "crate "'"'"$2"'"'" not found in the register"
        fi
      else
        help
      fi
    )
  ;;
  *)
    help
  ;;
esac
